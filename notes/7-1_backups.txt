While there are a number of "backup" applications, both FOSS and commercial / proprietary, the vast majority of them add a bit of overhead to the process as well as have their own obfuscated data storage methods. As a result, a number of simple yet effective file system tools have been developed.

Hard drive sizes have greatly increased over the last few years but backup tapes have not had the same storage capacity jumps. As a result, I prefer to backup to hard disk rather than tape. Most advanced tape backup systems now recommend having an intermediate storage system usually based on hard disks so you can backup more quickly (freeing the backup source sooner) and then spool to tape at a usually slower rate.

Some FOSS file-based backup applications include:
BackupPC - http://backuppc.sourceforge.net/
Backula - http://www.bacula.org/
Zmanda - http://www.zmanda.com/ (commercially supported Amanda)

tar - The GNU version of the tar archiving utility
tar -cvzf /desired/destination/path/and/filename.tar.gz /path/to/backup
tar -cvJf /desired/destination/path/and/filename.tar.xz /path/to/backup
tar -I zstd -cvf /desired/destination/path/and/filename.tar.zstd /path/to/backup (is the zstd package installed?  If not, you can install it)

scp - Secure copy (remote file copy program), overwrites destination files
scp file1 file2 dir1/ dir2/ user@remotehost:/full/path/to/backup/directory/

Common flags:
-l - limit rate specified in Kbits/s
-P - port
-p - preserves modification times, access times, and modes from the original file
-r - recursively copy

rsync - A fast, versatile, remote (and local) file-copying tool
rsync is a file-based mirroring program that can use the local filesystem or a remote filesystem for the destination. If a remote system is selected then the transmission takes places over encrypted ssh. rsync is very efficient and uses an algorithm created by Andrew Tridgell who is best known for his work on samba. The algorithm does not come into play on the first transfer but does upon subsequent transfers... where it will try to only transfer changed files and then only the changed pieces.

The most commonly used flags are:
-a - archive mode; equals -rlptgoD (no -H,-A,-X)
-v - verbose
-S, --sparse - handle sparse files efficiently
--delete - delete extraneous files from dest dirs
--exclude=PATTERN - exclude files matching PATTERN
--bwlimit=KBPS - limit I/O bandwidth; KBytes per second

Example:
rsync -avS \
--progress \
--delete \
--exclude=/dev \
--exclude=/proc \
--exclude=/mnt \
--exclude=/sys \
--exclude=/media \
--exclude=/tmp \
root@sourcehost:/ \
/backups/hostname/

borgbackup - Chunk-based backup program.
Packaged by most Linux distros and written in Python. Also available for macOS. Maybe Windows someday?

Features:
          Block based with encryption, compression, and de-duplication – all done on the client side – you can store your backups on systems you don’t trust if encrypted.
          Push from client to backup host
          Provides FUSE-based mount-from-backup option

Examples:
Create / initialize repository:
     borg --verbose init --encryption=repokey user@backuphost:/path/to/repository/reponame
Create a backup / archive:
     borg --progress --verbose create -C zstd,5 -e /dev -e /run -e /tmp -e /sys -e /proc -e /mnt -e /media -e /var/log -e /var/cache \
     -s user@backuphost:/path/to/repository/reponame::$(date +%Y%m%d) /

Usage:
# Setup ssh-key-based auth for backup user and...
export BORG_PASSPHRASE="supersecretpassword"
export BORG_REPO="user@backuphost:/path/reponame"

/bin/borg create -C zstd,5 -s ::$(date +%Y%m%d) /etc /root /home

Imaging Software - bit-by-bit copy rather than file-based
Disk image-based backup utilities are really good for cloning systems. The main disadvantage of using disk imaging software is that they usually can only backup a partition / disk if it is not in use. Often disk image-backup software is run by booting from an alternative partition or live media.
 
Some FOSS imaging applications include:
clonezilla (partclone) - http://clonezilla.org/
dd and ddrescue
 
Some "missing features" in the free programs: 1) Can't mount the image file(s) and alter them and 2) Can't clone a larger to smaller
There are a number of commercial / closed source products and they include Ghost, Acronis True Image, etc.
See: http://en.wikipedia.org/wiki/Disk_cloning